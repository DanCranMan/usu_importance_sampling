plugins {
    id 'org.ajoberstar.grgit' version '4.1.1' apply false
}
apply plugin: 'java'
apply plugin: 'application'


mainClassName = "imsam.Main"

sourceCompatibility = 13
targetCompatibility = 13


// This tasks uses grgit to clone the cli-args lib
// and runs before the compileJava task
import org.ajoberstar.grgit.Grgit
task cliargs {
    doFirst {
        def repoDir = "$buildDir/cli-args"
        def grgit = Grgit.init(dir: repoDir)
        if (grgit.remote.list().isEmpty()) {
            grgit.remote.add(name: "origin", url: "https://github.com/jjenkov/cli-args.git")
        }
        grgit.pull(rebase: true)
    }
}
compileJava.dependsOn cliargs

// We have multiple sources dirs because of the
// source lib(s) used
sourceSets {
    main {
        java {
            srcDirs "src/main/java"
            srcDirs "build/cli-args/src/main/java"
        }
    }
}

// Custom configuration used to bundle libs into jar file
configurations {
    libBundle
}

repositories {
    mavenCentral()
}

dependencies {
    // Prism files not to be copied to distributions
    compileOnly files("/usr/local/prism-src/prism/classes")

    // Declare any new dependencies here using the
    // libBundle configuration
    libBundle "org.json:json:20220320"
    libBundle "args4j:args4j:2.33"
    libBundle "org.apache.logging.log4j:log4j-core:2.18.0"
    configurations.implementation.extendsFrom(configurations.libBundle)

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"

    // Protect against Log4j vulnerability
    constraints {
        implementation("org.apache.logging.log4j:log4j-core") {
            version {
                strictly("[2.17, 3[")
                prefer("2.17.0")
            }
            because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
        }
    }

}

jar {
    manifest {
        attributes "Main-Class": "imsam.scaffoldImportanceSampling"
    }
    from {
        // This bundles all the dependencies from libBundle into the jar
        configurations.libBundle.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE     // fixes duplicate error from Gradle 7
}

test {
    useJUnitPlatform()
}